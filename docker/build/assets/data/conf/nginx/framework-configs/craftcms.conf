upstream phpfcgi {
    server fpm:9000;
}

# set cache: cache_zone, 128m memory, 1g disk, inactive 25h days, temp path is in the cache
fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=cache_zone:384m inactive=25h max_size=1g use_temp_path=off;

server {
    listen 80;
    server_name $hostname;
    root /app/web;
    error_log /var/log/nginx/project_error.log;
    #access_log /var/log/nginx/project_access.log;
    access_log off;
    index index.php index.html;

    # cache all by default (=0)
    set $no_cache 0;
    # default save to cache
    set $no_cache_save 0;
    # default cache key
    #set $cache_key "$scheme$request_method$host$request_uri";
    set $cache_key "$scheme$request_method$host$uri$is_args$args";

    # shared php-fpm configuration
    fastcgi_buffering       on;
    fastcgi_buffer_size     256k;
    fastcgi_buffers         128 256k;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout    300;
    fastcgi_read_timeout    300;

    # Don't cache POST requests
    if ($request_method = POST)
    {
        set $no_cache 1;
        set $no_cache_save 1;
    }

    # Don't cache if the URL contains a 'token' query string
    if ($query_string ~* "token=([a-zA-Z0-9]+)") {
        set $no_cache 1;
        set $no_cache_save 1;
    }

    # Don't cache if the URL contains a 'cache=bypass' query string
    if ($query_string ~* "cache=bypass") {
        set $no_cache 1;
        set $no_cache_save 1;
    }

    # Don't cache BUT save if the URL contains a 'cache=refresh' query string
    if ($query_string = "cache=refresh") {
        set $no_cache 1;
        set $cache_key "$scheme$request_method$host$uri";
    }

    # set cache key
    fastcgi_cache_key $cache_key;

    # Issue a 301 Redirect for any URL with a trailing /
    rewrite ^/(.*)/$ /$1 permanent;

    # Change // -> / for all URLs, so it works for our php location block, too
    merge_slashes off;
    rewrite (.*)//+(.*) $1/$2 permanent;

    gzip  on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    # Configure all locations
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location = /version.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
      allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a period
    location ~ (^|/)\. {
      return 403;
    }

    location ~ \..*/.*\.php$ {
      return 403;
    }

    # deny some known locations
    location ~ ^/(wp-admin|wp-login|xmlrpc|cronjstats\.php$) {
      return 403;
    }

    # Don't allow direct access to PHP files in the vendor directory
    location ~ /vendor/.*\.php$ {
      deny all;
      return 404;
    }

    location ~* \.(png|jpe?g|gif|ico|woff2?)$ {
      try_files $uri $uri/ @rewrites;
      expires 1h;
      log_not_found off;
      add_header Pragma public;
      add_header Cache-Control "public";
    }

    # Special treatment of webpack generated hashed files (main-(hash).js|css)
    location ~* main-[0-9a-z]+\.(js|css)$ {
      try_files $uri $uri/ @rewrites;
      expires 1y; # one year
      log_not_found off;
      add_header Pragma public;
      add_header Cache-Control "public";
      gzip  on;
      gzip_min_length 1024; # one kb
    }

    location ~* \.(js|css)$ {
      try_files $uri $uri/ @rewrites;
      expires 1h; # one hour
      log_not_found off;
      add_header Pragma public;
      add_header Cache-Control "public";
      gzip  on;
      gzip_min_length 1024; # one kb
    }

    # start special routing to @phpfpm_nocache handler for the following locations

    # must correspond to 'cpTrigger'
    location ^~ /cmsadm {
        try_files $uri $uri/ @phpfpm_nocache;
    }
    location ^~ /index.php/cmsadm {
        try_files $uri $uri/ @phpfpm_nocache;
    }
    # must correspond to 'resourceTrigger'
    location ^~ /cpresources {
        try_files $uri $uri/ @phpfpm_nocache;
    }
    # must correspond to 'actionTrigger'
    location ^~ /actions {
        try_files $uri $uri/ @phpfpm_nocache;
    }
    # our api location
    location ^~ /api/ {
        try_files $uri $uri/ @phpfpm_nocache;
    }
    # end special routing

    location / {
        try_files $uri $uri/ @rewrites;
    }

    location @rewrites {
        rewrite ^(/en|de|fr|es)?/(.*)$ $1/index.php?p=$2&$args? last;
    }

    location ~ [^/]\.php(/|$) {
        try_files $uri $uri/ /index.php?$query_string;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include /etc/nginx/fastcgi_params;

        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";

        fastcgi_param HOST                    $host;
        set $realip $remote_addr;
        if ($http_x_forwarded_for ~ "^(\d+\.\d+\.\d+\.\d+)") {
          set $realip $1;
        }
        fastcgi_param HTTP_X_REAL_IP          $realip;
        fastcgi_param HTTP_X_FORWARDED_FOR    $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_PROTO  $scheme;
        fastcgi_param REMOTE_ADDR             $realip;
        fastcgi_param SCRIPT_FILENAME         $document_root/index.php;
        fastcgi_param PATH_INFO               $fastcgi_path_info;
        fastcgi_intercept_errors on;
        fastcgi_pass phpfcgi;

        # Don't allow browser caching of dynamically generated content
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        # FastCGI Cache settings
        fastcgi_ignore_headers  Cache-Control Expires Set-Cookie;
        fastcgi_cache           cache_zone;
        fastcgi_hide_header     Set-Cookie;

        fastcgi_cache_valid 200           1h;
        fastcgi_cache_valid 301 302 404   1d;

        fastcgi_cache_use_stale updating error timeout invalid_header http_500 http_503;
        fastcgi_cache_bypass    $no_cache;
        fastcgi_no_cache        $no_cache_save;
        add_header X-Cache      $upstream_cache_status;
    }

    location @phpfpm_nocache {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        include /etc/nginx/fastcgi_params;

        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";

        fastcgi_param HOST                    $host;
        set $realip $remote_addr;
        if ($http_x_forwarded_for ~ "^(\d+\.\d+\.\d+\.\d+)") {
          set $realip $1;
        }
        fastcgi_param HTTP_X_REAL_IP          $realip;
        fastcgi_param HTTP_X_FORWARDED_FOR    $proxy_add_x_forwarded_for;
        fastcgi_param REMOTE_ADDR             $realip;
        fastcgi_param SCRIPT_FILENAME         $document_root/index.php;
        fastcgi_param PATH_INFO               $query_string;
        fastcgi_intercept_errors on;
        fastcgi_pass phpfcgi;

        # Don't allow browser caching of dynamically generated content
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        # No FastCGI Cache
        fastcgi_cache_bypass 1;
        fastcgi_no_cache 1;
    }
}
